<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yamls on PullApprove Docs</title>
    <link>http://docs.pullapprove.com/yaml/</link>
    <description>Recent content in Yamls on PullApprove Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Dec 2015 20:19:51 -0600</lastBuildDate>
    <atom:link href="http://docs.pullapprove.com/yaml/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>reviewers</title>
      <link>http://docs.pullapprove.com/yaml/reviewers/</link>
      <pubDate>Wed, 30 Dec 2015 20:19:51 -0600</pubDate>
      
      <guid>http://docs.pullapprove.com/yaml/reviewers/</guid>
      <description>

&lt;p&gt;This is a dynamic field for defining who reviewers are. See examples below for usage.&lt;/p&gt;

&lt;p&gt;Overview:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add as many &amp;ldquo;reviewer groups&amp;rdquo; as you like&lt;/li&gt;
&lt;li&gt;for each group:

&lt;ul&gt;
&lt;li&gt;give it a name&lt;/li&gt;
&lt;li&gt;decide how many approvals are required&lt;/li&gt;
&lt;li&gt;choose the members&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;once approval has passed for all groups, the PR is approved&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The structure is simple, yet powerful. Best explained by examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;require approval from 1 frontend dev, 1 backend dev, 1 admin&lt;/li&gt;
&lt;li&gt;require approval from 2 data scientists and 2 data engineers&lt;/li&gt;
&lt;li&gt;require approval from 2 developers, 1 consultant, 2 account managers&lt;/li&gt;
&lt;li&gt;require approval from&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;multiple-reviewer-groups-example:0f435dbce8eb2542a19d6d5ea7ebce44&#34;&gt;Multiple reviewer groups example&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;approve_by_comment: true
approve_regex: &#39;^:\+1:&#39;
reject_regex: &#39;^No&#39;
reviewers:
    -
        name: admins
        required: 2
        members:
            - a_user
            - anotheruser
    -
        name: backend_devs
        required: 1
        members:
            - backender_one
    -
        name: designers
        required: 1
        members:
            - designerA
            - designerB

&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;single-reviewer-group-example:0f435dbce8eb2542a19d6d5ea7ebce44&#34;&gt;Single reviewer group example&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;approve_by_comment: false
approve_regex: &#39;LGTM&#39;
reviewers:
    required: 1
    members:
        - a_user
        - anotheruser
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>reject_regex</title>
      <link>http://docs.pullapprove.com/yaml/reject_regex/</link>
      <pubDate>Wed, 30 Dec 2015 20:19:46 -0600</pubDate>
      
      <guid>http://docs.pullapprove.com/yaml/reject_regex/</guid>
      <description>&lt;p&gt;Set a custom regular expression to use when parsing pull request comments for rejection.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: &lt;code&gt;approve_by_comment&lt;/code&gt; must be enabled to use this.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>approve_regex</title>
      <link>http://docs.pullapprove.com/yaml/approve_regex/</link>
      <pubDate>Wed, 30 Dec 2015 20:19:42 -0600</pubDate>
      
      <guid>http://docs.pullapprove.com/yaml/approve_regex/</guid>
      <description>&lt;p&gt;Set a custom regular expression to use when parsing pull request comments for approval.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: &lt;code&gt;approve_by_comment&lt;/code&gt; must be enabled to use this.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>approve_by_comment</title>
      <link>http://docs.pullapprove.com/yaml/approve_by_comment/</link>
      <pubDate>Wed, 30 Dec 2015 19:59:05 -0600</pubDate>
      
      <guid>http://docs.pullapprove.com/yaml/approve_by_comment/</guid>
      <description>&lt;p&gt;Enable parsing of pull request comments on github.com to trigger approval status.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>